# This is the default configuration file for bb_cppverify used at Bloomberg LP.
namespace BloombergLP

# This string in a file indicates that the file is part of the enterprise.
set enterprise Bloomberg

# Maximum number of lines and statements in an inline function.
set max_inline_lines 20

# Don't warn about scope of global definitions in main file.
set main_namespace_check off

# Don't warn about scope of global definitions in these packages.
set global_packages bslmf bslstl

# Don't warn about global definitions in these namespaces.
set standard_namespaces bsl std BloombergLP::bslstl native_std

# Don't warn about these global names at all.
set global_names hashAppend

# Allow imperfect banner centering.
set banner_slack 5

# Allowed number of non-noise words between 'specified' and parameter in
# function contract.
set word_slack 3

# Allowed number of available positions at end of comment line which will not
# draw a "can wrap" warning from the next line.
set wrap_slack 1

# List of words which may appear unquoted in function contract even when they
# are parameter names.
set ok_unquoted                                                               \
    allocator                                                                 \
    from                                                                      \
    key                                                                       \
    level                                                                     \
    to                                                                        \
    value                                                                     \

# If a word appears at least this many times, assume it's spelled correctly.
set spelled_ok_count 3

# These words are to be considered spelled correctly
set dictionary                                                                \
    accessor{,s}                                                              \
    adl                                                                       \
    allocator{,s}                                                             \
    bde                                                                       \
    bdewrap                                                                   \
    bitwise                                                                   \
    bloomberg                                                                 \
    BLP                                                                       \
    bsl{,m{a,f}}                                                              \
    const{,ness}                                                              \
    deallocate{,d,s}                                                          \
    dereference{,d,s}                                                         \
    destructor{,s}                                                            \
    drqs                                                                      \
    enum                                                                      \
    enqueu{e{,d},ing}                                                         \
    filename                                                                  \
    functor{,s}                                                               \
    gcc                                                                       \
    {g,u}uid{,s}                                                              \
    indices                                                                   \
    initiali{s,z}er{,s}                                                       \
    inlin{e,ing}                                                              \
    instantia{ble,tion{,s}}                                                   \
    {i,io,o}stream{,s}                                                        \
    leveli{s,z}{ation,e{,d}}                                                  \
    {l,r}hs                                                                   \
    lookup                                                                    \
    {l,{,p}r}value{,s}                                                        \
    merchantability                                                           \
    metafunction{,s}                                                          \
    multi                                                                     \
    namespace{,s}                                                             \
    noninfringement                                                           \
    parameteri{s,z}ed                                                         \
    portably                                                                  \
    pragma                                                                    \
    proleptic                                                                 \
    resiz{e{,d,s},ing}                                                        \
    runtime{,s}                                                               \
    sfinae                                                                    \
    stl                                                                       \
    struct                                                                    \
    sublicense                                                                \
    subrange{,s}                                                              \
    subsequence{,s}                                                           \
    templati{s,z}ed                                                           \
    typedef{,s}                                                               \
    unary                                                                     \
    unbuffered                                                                \
    unticked                                                                  \
    utc                                                                       \
    variadic                                                                  \
    vtable{,s}                                                                \
    xlc                                                                       \

# These are recognized abbreviations for use in variable names.
set variable_abbreviations =                                                  \
    arg cb dst fn id init iter max min msg num pos ptr ref src tmp

# Enable only those checks which are "universal," not specific to BDE.
# check allocator-forward on
suppress RV01 *
# check allocator-new on
check alphabetical-functions off
# check anon-namespace on
# check array-argument on
check array-initialization off
# check assert-assign on
check banner off
check boolcomparison off
check bsl-overrides-std off
# check c-cast on
# check char-classification-range on
# check char-vs-string on
check comments off
check comparison-order off
# check component-header on
# check component-prefix on
check constant-return off
check contiguous-switch off
# check cpp-in-extern-c on
# check deprecated on
check diagnostic-filter off
# check do-not-use-endl on
check dump-ast off
# check entity-restrictions on
check enum-value off
# check external-guards on
check files off
# check free-functions-depend on
# check friends-in-headers on
check function-contract off
# check global-data on
# check global-function-only-in-source on
# check global-type-only-in-source on
check groupname off
# check hash-pointer on
check headline off
check implicit-ctor off
# check in-enterprise-namespace on
# check include-guard on
check include-in-extern-c off
check include-order off
check indentation off
check leaking-macro off
# check local-friendship-only on
check long-inline off
check longlines off
check member-definition-in-class-definition off
# check member-names on
check mid-return off
check namespace-tags off
check nested-declarations off
# check nonascii on
check operator-void-star off
check packagename off
# check ref-to-movableref on
check refactor off
check refactor-config off
# check runtime-initialization on
check spell-check off
# check strict-alias on
# check string-add on
check swap-a-b off
# check swap-using on
check template-typename off
check test-driver off
check that-which off
# check throw-non-std-exception on
# check transitive-includes on
# check unnamed-temporary on
check upper-case-names off
# check using-declaration-in-header on
# check using-directive-in-header on
# check verify-same-argument-names on
check whitespace off

## ----------------------------------------------------------------------------
## Copyright (C) 2015 Bloomberg Finance L.P.
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to
## deal in the Software without restriction, including without limitation the
## rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
## sell copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
## IN THE SOFTWARE.
## ----------------------------- END-OF-FILE ----------------------------------
