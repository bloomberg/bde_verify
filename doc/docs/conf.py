# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/stable/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

# -- Project information -----------------------------------------------------

if tags.has('bb_cppverify'):
    project       = u'bb_cppverify Documentation'
    rst_prolog    = """
    .. |BV| replace:: ``BB_CPPVERIFY``
    .. |Bv| replace:: ``Bb_cppverify``
    .. |bv| replace:: ``bb_cppverify``
    .. |BDE| replace:: BloombergLP C++
"""
elif tags.has('bde_verify'):
    project       = u'bde_verify Documentation'
    rst_prolog    = """
    .. |BV| replace:: ``BDE_VERIFY``
    .. |Bv| replace:: ``Bde_verify``
    .. |bv| replace:: ``bde_verify``
    .. |BDE| replace:: BDE
"""
else:
    sys.exit("Specify -t bb_cppverify or -t bde_verify in SPHINXOPTS.")

author = u'Hyman Rosen'
copyright = u'2021, Bloomberg LP'

# The short X.Y version
version = u'1.3.20'
# The full version, including alpha/beta/rc tags
release = u'1.3.20'

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.mathjax',
    'sphinx.ext.githubpages',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_parsers = {
}
source_suffix = ['.rst']

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
#pygments_style = 'sphinx'
pygments_style = 'friendly'

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_theme_path = [ '_themes', ]
html_theme_options = {
    'prev_next_buttons_location': 'None'
}

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_context = {
    'css_files': [
        '_static/bde.css',
        ],
    }

## Disable showing page sources in rst.
html_show_sourcelink = False

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'BDEVerifydoc'

# -- Extension configuration -------------------------------------------------
def setup(app):
    app.add_stylesheet('bde.css')
